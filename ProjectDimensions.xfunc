// CREATED BY CONNOR FRICKE, 5-MARCH-2024
// ProjectDimensions.xfunc
// function ProjectDimensions()
//
// This function is designed to set frequency domain as well as the preferred units of
// the XF Project. We only need control over a couple of the units for this experiment.
// Besides length, time, and frequency units, all others can be left to the default.
// Technically, we are running the experiment at a discrete frequency, but we will
// want to specify a small range of frequencies around that. Importantly, the upper
// limit of the frequency is what decides our meshing/gridding cell size.
//
// ProjectDimensions() returns the wavelength of light at the midpoint of the frequency range.
// It takes three parameters, which are: 
// an array of strings for each unit preference that we want to set, the minimum frequency,
// and the maximum frequency.
//
// ***************************************

function ProjectDimensions(unitsArray, lowerFreq, upperFreq)
{
	// 250 MHz -> Wavelength = 1.2 m which defines our general scale
	// For the time units, we are operating on the nanosecond scale bc we only need enough time for
	// the wave to propogate through the experiment (c = 0.3 m / ns)
	var frequencyUnits = "MHz";	// Megahertz
	var lengthUnits = "m";	// meters
	var timeUnits = "ns";	// nanoseconds

	// get a reference to the project and the project preferences 
	var preferences = App.getActiveProject().getUnitPreferences();
	Output.println("Setting Project Units:");

	for (var i = 0; i < unitsArray.length; i++) 
	{
		preferences.setPreference(unitsArray[i]);
		Output.println(unitsArray[i]);
	}

	// set project's frequency range based on parameter 2 and 3.
	// getFrequencyRangeOfInterest() returns a Range1D object which we can call set() on.
	App.getActiveProject().getFrequencyRangeOfInterest().set(lowerFreq, upperFreq)
}
