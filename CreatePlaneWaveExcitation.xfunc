// CREATED BY CONNOR FRICKE, 18-MARCH-2024
// CreatePlaneWaveExcitation.xfunc
// function CreatePlaneWaveExcitation()
//
// This function will create an external excitation based on incident theta and phi angles. In addition,
// it will create an AutomaticRangeBasedWaveform and assign that waveform to the excitation.
//
// CreatePlaneWaveExcitation() does not return anything. The function requires four parameters to describe the 
// external excitation. 
// Incident Theta Angle (degrees)
// Incident Phi Angle (degrees)
// E Field (theta) Amplitude Multiplier
// E Field (phi) Amplitude Multiplier
//
// ***************************************

function CreatePlaneWaveExcitation(incidentTheta, incidentPhi, eThetaAmplitude, ePhiAmplitude)
{
	var proj = App.getActiveProject();
	var wfList = proj.getWaveformList();
	var eeList = proj.getExternalExcitationList();
	wfList.clear();
	eeList.clear();

	// *** CREATE AUTOMATIC WAVEFORM ***
	// Waveform() constructor can take a WaveformShape parameter.
	var wfShape = new AutomaticRangeBasedWaveformShape("Automatic");
	var autoWaveform = new Waveform(wfShape);
	autoWaveform.name = "Automatic";

	// *** CREATE EXTERNAL EXCITATION (PLANE WAVE) ***
	var planeWave = new PlaneWave();
	// 90 deg theta, 90 deg phi -> coming from +y direction.
	// 0 V/m EPhi, 1 V/M ETheta -> oscillations in z direction.
	planeWave.setIncidentTheta(incidentTheta);
	planeWave.setIncidentPhi(incidentPhi);
	planeWave.ePhiPolarizedAmplitudeMultiplier = ePhiAmplitude;
	planeWave.eThetaPolarizedAmplitudeMultiplier = eThetaAmplitude;
	planeWave.setWaveform(autoWaveform);
	planeWave.name = "Plane Wave";

	// *** ADD EXCITATION TO E.E. LIST (this also adds the waveform to the wfList) ***
	eeList.addExternalExcitation(planeWave);
}